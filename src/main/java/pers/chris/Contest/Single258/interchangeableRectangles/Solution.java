package pers.chris.Contest.Single258.interchangeableRectangles;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

class Solution {
    public long interchangeableRectangles(int[][] rectangles) {
        Map<Integer, Long> map = new HashMap<>();
        final int HASH = 100001;
        for (int[] rectangle : rectangles) {
            int w = rectangle[0];
            int h = rectangle[1];
            int gcd = gcd(w, h);
            w /= gcd;
            h /= gcd;
            int key = w * HASH + h;
            map.put(key, map.getOrDefault(key, (long) 0) + 1);
        }

        long sum = 0;

        for (Map.Entry<Integer, Long> entry : map.entrySet()) {
            if (entry.getValue() > 1) {
                sum += nchoosek(entry.getValue(), 2);
            }
        }
        return sum;
    }

    private static int gcd(int a, int b) {
        return (b == 0) ? a : gcd(b, a % b);
    }

    public static long nchoosek(long n, long k){
        k = (k > (n - k)) ? n - k : k;
        if(k <= 1){  // C(n, 0) = 1, C(n, 1) = n
            return k == 0 ? 1 : (int) n;
        }
        int cacheLen = (int) (k + 1);
        long[] befores = new long[cacheLen];
        befores[0] = 1;
        long[] afters = new long[cacheLen];
        afters[0] = 1;
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= k; j++){
                afters[j] = befores[j - 1] + befores[j];
            }
            System.arraycopy(afters, 1, befores, 1, (int) k);
        }
        return befores[(int) k];
    }
}

//[[2,1],[2,2],[2,1],[1,2],[2,2],[2,1],[2,2],[1,2],[2,1],[1,1],[1,2],[2,1],[2,2],[1,1],[2,1],[2,2],[1,1],[2,1],[1,2],[2,1],[2,2],[1,2],[2,2],[2,2],[1,2],[1,2],[2,2],[1,2],[1,1],[2,1],[2,2],[1,1],[1,1],[1,1],[1,1],[2,1],[1,1],[2,2],[1,2],[2,1],[1,1],[1,2],[2,1],[1,1],[1,2],[2,2],[1,2],[1,2],[1,1],[1,2],[2,1],[2,2],[1,1],[2,2],[1,1],[2,1],[1,1],[1,1],[2,2],[1,2],[1,2],[2,2],[2,1],[1,1],[2,2],[2,2],[2,1],[2,1],[1,2],[1,2],[1,1],[2,2],[1,2],[2,2],[1,2],[1,1],[2,1],[2,2],[1,1],[2,2],[2,2],[2,2],[2,1],[2,2],[1,2],[1,1],[1,1],[2,2],[2,1],[2,1],[2,1],[2,2],[1,2],[2,2],[1,2],[1,2],[1,1],[2,1],[2,1],[2,1],[1,2],[1,1],[2,1],[2,1],[2,1],[1,1],[1,1],[1,1],[1,1],[1,1],[2,1],[2,1],[1,1],[1,1],[1,1],[1,1],[2,1],[2,2],[2,1],[1,2],[2,1],[1,2],[2,1],[2,2],[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[2,2],[1,2],[1,1],[2,2],[1,2],[2,1],[2,1],[2,1],[2,1],[2,1],[2,2],[1,2],[2,2],[1,2],[1,1],[1,2],[1,2],[1,1],[2,2],[1,2],[2,1],[1,2],[1,1],[1,2],[2,1],[1,2],[1,1],[2,2],[1,2],[2,1],[1,1],[1,1],[2,1],[2,2],[1,1],[2,1],[2,2],[2,1],[2,1],[2,2],[2,1],[1,1],[1,1],[2,2],[2,1],[2,2],[2,1],[1,1],[2,2],[1,2],[2,1],[1,2],[1,1],[2,1],[2,2],[2,1],[2,1],[1,2],[2,1],[1,1],[2,1],[1,1],[1,2],[2,2],[2,1],[2,1],[2,1],[2,1],[1,2],[2,1],[1,2],[1,2],[1,2],[2,1],[2,1],[2,1],[2,2],[2,1],[2,2],[2,2],[1,1],[1,1],[2,2],[2,1],[1,1],[2,2],[1,2],[1,1],[1,1],[2,1],[2,1],[1,2],[2,2],[1,2],[2,1],[2,2],[2,1],[1,2],[1,1],[2,1],[2,1],[1,2],[1,2],[2,1],[2,1],[1,2],[2,1],[1,2],[2,1],[1,2],[1,1],[1,2],[2,1],[2,1],[2,1],[1,1],[2,2],[2,2],[2,1],[2,1],[1,2],[1,2],[2,1],[2,2],[1,1],[1,1],[1,2],[1,2],[2,2],[1,1],[1,1],[1,2],[1,1],[1,1],[2,2],[2,2],[2,1],[1,2],[1,1],[2,2],[2,2],[2,2],[2,1],[2,1],[1,2],[2,2],[2,1],[1,1],[1,1],[1,1],[1,2],[2,1],[2,1],[1,2],[1,1],[1,1],[1,1],[2,2],[1,1],[2,1],[1,2],[1,2],[2,2],[2,2],[2,1],[2,2],[1,2],[2,1],[1,2],[2,2],[2,2],[2,1],[1,2],[1,2],[1,1],[2,2],[1,1],[1,2],[1,2],[2,1],[1,1],[1,1],[2,2],[2,1],[2,2],[1,2],[1,1],[2,1],[1,2],[2,2],[2,2],[1,1],[2,2],[2,2],[2,1],[1,2],[1,1],[2,2],[2,1],[2,2],[2,1],[1,1],[2,2],[1,2],[2,1],[2,1],[1,2],[2,2],[1,2],[2,1],[2,1],[2,2],[1,2],[1,1],[2,1],[2,1],[2,1],[1,2],[1,2],[1,2],[1,1],[2,2],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[1,2],[1,1],[1,1],[1,2],[1,1],[2,2],[2,2],[1,1],[1,2],[2,1],[1,2],[1,1],[2,1]]